{
  "date": "Sunday March 22nd, 2020",
  "dateshort": "March 22nd",
  "title": "Easeout Weekly #5",
  "short": "A weekly roundup of the latest web design & development news.",
  "thumbnail": "/images/uploads/e05.png",
  "category": "Newsletter",
  "body": "<div class=\"news-grid\">\n\n<div class=\"news-item\">\n\n![Neumorphism and CSS](/images/uploads/neumorphism-css.png)\n\n[Neumorphism and CSS](https://css-tricks.com/neumorphism-and-css/)\n\nA showcase of the various neumorphic effects that can be created using CSS. Taking a look at both the arguments for and against the style and looking at how it can be used in a web interface.\n\n[Read it](https://css-tricks.com/neumorphism-and-css/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Creating Sortable Tables With React](/images/uploads/sortable-tables-react.png)\n\n[Creating Sortable Tables With React](https://www.smashingmagazine.com/2020/03/sortable-tables-react/)\n\nMaking your tables sortable in React might sound like a daunting task, but it doesn’t have to be too difficult. In this article, we’re going to implement all you need to sort out all of your table sorting needs.\n\n[Read it](https://www.smashingmagazine.com/2020/03/sortable-tables-react/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![React Suspense in Practice](/images/uploads/suspense-all-loading.png)\n\n[React Suspense in Practice](https://css-tricks.com/react-suspense-in-practice/)\n\nThis article looks at how Suspense works, what it does, and how it can integrate into a real web app. Focusing on how to integrate routing and data loading with Suspense in React.\n\n[Read it](https://css-tricks.com/react-suspense-in-practice/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Consistent Backends and UX: What are the Barriers to Adoption?](/images/uploads/consistent-backends-ux-barriers.png)\n\n[Consistent Backends and UX: What are the Barriers to Adoption?](https://css-tricks.com/consistent-backends-and-ux-what-are-the-barriers-to-adoption/)\n\nThis article argues that we should go beyond backend consistency, with modern serverless pricing models, built-in authentication, temporality, native GraphQL, and more driving the future of databases.\n\n[Read it](https://css-tricks.com/consistent-backends-and-ux-what-are-the-barriers-to-adoption/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![A Practical Overview Of CSS Houdini](/images/uploads/magic-stage.png)\n\n[A Practical Overview Of CSS Houdini](https://www.smashingmagazine.com/2020/03/practical-overview-css-houdini/)\n\nThis articles examines each part of Houdini, its current browser support and sees how they can be used today using progressive enhancement.\n\n[Read it](https://www.smashingmagazine.com/2020/03/practical-overview-css-houdini/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Playing With Particles Using the Web Animations API](/images/uploads/sparkles.png)\n\n[Playing With Particles Using the Web Animations API](https://css-tricks.com/playing-with-particles-using-the-web-animations-api/)\n\nIn this article, we'll perform a little particle magic using the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API) to create a firework effect when clicking on a button.\n\n[Read it](https://css-tricks.com/playing-with-particles-using-the-web-animations-api/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![How Should Designers Learn To Code?](/images/uploads/how-should-designers-learn-to-code-part-1.png)\n\n[How Should Designers Learn To Code?](https://www.smashingmagazine.com/2020/03/designers-code-terminal-text-editors-part-1/)\n\nThis article is the first in a series, providing a few different learning methods for designers looking to pickup coding skills. Here we’ll take a look at getting comfortable with the command line and text editors.\n\n[Read it](https://www.smashingmagazine.com/2020/03/designers-code-terminal-text-editors-part-1/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![CodePen Home Parallax Horizontal Image Scroller](/images/uploads/nojs-horizontal-parallax.png)\n\n[Parallax Horizontal Image Scroller -- No JS!](https://codepen.io/TharenaMelishka/pen/abOYVLx)\n\nA fine example of a parallax image scroller, with no JavaScript!\n\n[See it](https://codepen.io/TharenaMelishka/pen/abOYVLx) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![How to Create a “Skip to Content” Link](/images/uploads/link-pattern.png)\n\n[How to Create a “Skip to Content” Link](https://css-tricks.com/how-to-create-a-skip-to-content-link/)\n\nAre you using skip links on your site? This article will convince you to use one. Skip links are a great value add when it comes to the accessibility of a site.\n\n[Read it ](https://css-tricks.com/how-to-create-a-skip-to-content-link/)➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Serverless Architecture at Begin with Brian Leroux](/images/uploads/shoptalk-serverless.png)\n\n[Serverless Architecture at Begin with Brian Leroux](https://shoptalkshow.com/403/)\n\nIn this episode of ShopTalk, Brian Leroux talks about building modern web apps using Begin and other cloud services like it, including a deep dive on AWS Lambda.\n\n[](https://css-tricks.com/considerations-when-choosing-fonts-for-a-multilingual-website/)[Listen up](https://shoptalkshow.com/403/) ➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Implementing Infinite Scroll And Image Lazy Loading In React](/images/uploads/react-scroll-and-lazy-loading.png)\n\n[Implementing Infinite Scroll And Image Lazy Loading In React](https://www.smashingmagazine.com/2020/03/infinite-scroll-lazy-image-loading-react/)\n\nIn this tutorial, we’ll see how the HTMLIntersection Observer API can be implemented to create infinite scrolling and image lazy loading in a React functional component. We’ll also learn how to use some of React’s hooks and how to create Custom Hooks.\n\n[Read it ](https://www.smashingmagazine.com/2020/03/infinite-scroll-lazy-image-loading-react/)➡️\n\n</div>\n\n<div class=\"news-item\">\n\n![Record and Compare Google Lighthouse Reports](/images/uploads/google-lighthouse.png)\n\n[Build a Node.js Tool to Record and Compare Google Lighthouse Reports](https://css-tricks.com/build-a-node-js-tool-to-record-and-compare-google-lighthouse-reports/)\n\nThis article looks at how to create a simple tool in Node.js to run Google Lighthouse audits via the command line, save the reports they generate in JSON format and then compare them, so web performance can be monitored as the website grows and develops.\n\n[Read it](https://css-tricks.com/build-a-node-js-tool-to-record-and-compare-google-lighthouse-reports/) ➡️\n\n</div>\n\n</div>"
}