{
  "date": "Monday June 1st, 2020",
  "dateshort": "June 1st",
  "body": "Centering in CSS has traditionally been a cause for frustration. It‚Äôs an everyday task yet there are so many possible solutions! The approach you take will differ depending on whether you‚Äôre centering horizontally, vertically or both!\n\nIn this tutorial, we‚Äôll look at which methods are best in each scenario.\n\n### Horizontal Centering\n\n#### Inline Elements\n\nInline elements like text (and links) are super simple to center horizontally using the `text-align` property:\n\n```css\np {\n  text-align: center;\n}\n```\n\nThis works for inline, inline-block, inline-flex, inline-table, etc.\n\n#### Block Elements\n\nA block-level element can be centered if both its `margin-left` and `margin-right` properties are set to `auto` (assuming the element has a `width`). It‚Äôs often done with the `margin` shorthand:\n\n```css\n.element {\n  margin: 0 auto;\n}\n```\n\nHowever, the modern way to center block level elements (anything that isn‚Äôt text) is to use [Flexbox](https://www.easeout.co/blog/2020-05-22-the-flexbox-guide)!\n\nLet‚Äôs assume we have HTML like so:\n\n```html\n<div class=\"container\">\n  <div>.element</div>\n</div>\n```\n\nAdd the following CSS:\n\n```css\n.container {\n  display: flex;\n  justify-content: center;\n}\n```\n\nThis will horizontally center any element inside the `.container` element.\n\n![Horizontal Center](/images/uploads/center.png)\n\n### Vertical Centering\n\nVertical centering has traditionally been quite tricky. And more often than not it‚Äôd be accomplished with code like so:\n\n```css\n.parent {   \n  position: relative; \n} \n.child {   \n  position: absolute;   \n  top: 50%;   \n  transform: translateY(-50%); \n}\n```\n\nThis indeed works as it moves the child element back up half the distance of of its height. And it positions the middle of the child element at the middle of its parent.\n\nHowever, we can do this much more simply with Flexbox:\n\n```css\n.container {\n  display: flex;\n  align-items: center;\n}\n```\n\nThis will vertically center any element inside the `.container` element.\n\n![Vertical Center](/images/uploads/center-vertical.png)\n\n### Centering both Vertically and Horizontally\n\nTo center both vertically and horizontally we simply combine these techniques!\n\nTo perfectly center an element, in the middle of its container:\n\n```css\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n```\n\n![Perfect Center](/images/uploads/center-perfect.png)\n\nIf using CSS Grid, we can also do this easily:\n\n```css\n.container {\n  display: grid;\n  place-items: center;\n}\n```\n\nAnything can be centered in CSS!\n\nOnce you know the basics of [Flexbox](https://www.easeout.co/blog/2020-05-22-the-flexbox-guide) and [Grid](https://www.easeout.co/blog/2020-05-29-the-css-grid-guide), you‚Äôll see just how simple it is! üëç\n\n## Related Posts:\n\n* [The CSS Grid Guide](https://www.easeout.co/blog/2020-05-29-the-css-grid-guide)\n* [The Flexbox Guide](https://www.easeout.co/blog/2020-05-22-the-flexbox-guide)\n* [CSS Positioning](https://www.easeout.co/blog/2020-05-15-css-positioning)",
  "title": "How to Center Elements with CSS",
  "description": "Learn all about the CSS centering methods.",
  "short": "Learn all about the CSS centering methods.",
  "category": "CSS",
  "thumbnail": "/images/uploads/css-center-elements-min.png"
}