{
  "date": "Thursday April 16th, 2020",
  "dateshort": "April 16th",
  "body": "In this tutorial, we’ll be exploring three important CSS properties to understand when laying out pages: Margins, Padding & Borders.\n\n# Margins, Padding & Borders\n\nIf you’ve read my previous post on the [box model](https://www.easeout.co/blog/2020-04-14-the-css-box-model), you’ll know that the values held by the margin, padding & border properties directly effect the size of an elements’ box.\n\nThe focus of this tutorial will be how these properties relate to the box model. So make sure you [read up](https://www.easeout.co/blog/2020-04-14-the-css-box-model) on this first!\n\nNow let’s explore these properties in detail.\n\n## Margin\n\nThe `margin` property defines the outer portion of the box model, it creates space around an element, outside of any borders. In other words, it’s invisible space around your box, that pushes other elements away from the box.\n\nWe can specify our elements’ margins on each side, like so:\n\n```css\nmargin-top: 10px:\nmargin-right: 20px;\nmargin-bottom: 10px\nmargin-left: 20px;\n```\n\n### Margin shorthand\n\nWe can also use `margin` in shorthand form, which allows us to specify multiple margins simultaneously.\n\nUsing a single value, we apply that value to **all** the margins: top, right, bottom, left:\n\n```css\nmargin: 10px;\n```\n\nIf we use 2 values, the first sets the **top & bottom** margins, and the second the **left & right:**\n\n```css\nmargin: 10px 20px;\n```\n\nUsing 3 values applies the first to **top**, the second to **left & right**, the third to **bottom:**\n\n```css\nmargin: 10px 20px 30px;\n```\n\nUsing 4 values applies the first to **top**, the second to **right**, the third to **bottom**, the fourth to **left:**\n\n```css\nmargin: 10px 20px 30px 0px;\n```\n\nThe order to remember is *top > right > bottom > left*.\n\n`margin` accepts values in em, rem, or any of the CSS length units. As well as percentage values, and the `auto` value, which we’ll take a look at now!\n\n### Auto & centering\n\nWe use `auto` to tell the browser to automatically define a margin.\n\nIt’s often used for horizontal centering, like so:\n\n```css\n.element {\n  width: 500px;\n  margin: 0 auto;\n}\n```\n\nWith this code our element will be centered horizontally, within the available space. This will work as:\n\n* We’ve specified the element width\n* The left and right margins are set to `auto`\n\nWithout a specified width, the `auto` values would not work. As the available space (from the parent element) couldn’t be determined.\n\nThe more modern approach is to use flexbox for centering using `justify-content: center;`. However, as `margin: 0 auto` has been used so frequently over the past few years — it’s still good to know, especially when working with legacy code.\n\nNote: `auto` is useful only for horizontal (not vertical) centering!\n\n## Padding\n\nThe `padding` property defines the inner portion of the [box model](https://www.easeout.co/blog/2020-04-14-the-css-box-model). It creates space around the content of an element, inside of any margins and borders.\n\nWe specify our elements’ padding at each side, like so:\n\n```css\npadding-top: 10px:\npadding-right: 20px;\npadding-bottom: 10px\npadding-left: 20px;\n```\n\n### Padding shorthand\n\nIn the same manner as we’d use margin shorthand, we can use `padding` shorthand:\n\n```css\npadding: 10px 20px 30px 0px;\n```\n\n## Borders\n\nThe `border` surrounds an element between the padding and margin. We can use it to draw an edge around an element.\n\nWe use the properties `border-width`, `border-style` & `border-color`, to define our border.\n\n### Border width\n\n`border-width`: Specifies the border thickness.\n\n```css\np {\n  border-width: 2px;\n}\n```\n\nOr you could set each edge (Top > Right > Bottom > Left ) separately, like so:\n\n```css\np {\n  border-width: 2px 1px 2px 1px;\n}\n```\n\nWe can also use the following values:\n\n* `thin`: Equal to `1px`\n* `medium`: Equal to `3px`\n* `thick`: Equal to `5px`\n\n### Border style\n\n`border-style`: Specifies the type of line for our border.\n\nValues we can use are:\n\n* `none`: The default (displays no border).\n* `solid`: A solid line.\n* `hidden`: A line is drawn, but not visible. Could be used to add some extra width, without displaying a border.\n* `dashed`: A dashed line.\n* `dotted`: A dotted line.\n* `double`: Two straight lines are drawn around the element.\n* `groove`: Displays a border with a carved appearance — that has the effect of making the element look “pressed in” to the page.\n* `ridge`: The opposite of groove, giving a raised effect.\n* `inset`: Makes the element appear embedded.\n* `outset`: The opposite of inset, giving an embossed effect.\n\nMultiple `border-style` values can be combined. For example:\n\n```css\np {\n  border-style: none dashed solid dashed;\n}\n```\n\n### Border color\n\n`border-color` : Specifies the color of the border.\n\nAny valid color could be passed to this value. And if you don’t set a color, the border will default to the color of the text in the element.\n\n```css\np {\n  border-color: red;\n}\n```\n\nYou could also select the color of each edge (Top > Right > Bottom > Left) separately, like so:\n\n```css\np {\n  border-color: red green yellow blue;\n}\n```\n\n## Applying borders to specific sides\n\nIf we wish to apply properties to individual sides only, we could use:\n\n* `border-top`\n* `border-right`\n* `border-bottom`\n* `border-left`\n\nAnd to style each side individually:\n\n* `border-top-width`\n* `border-top-style`\n* `border-top-color`\n* `border-right-width`\n* `border-right-style`\n* `border-right-color`\n* `border-bottom-width`\n* `border-bottom-style`\n* `border-bottom-color`\n* `border-left-width`\n* `border-left-style`\n* `border-left-color`\n\n## Border shorthand\n\nThankfully you can set these properties all at once! Using the `border` shorthand. The syntax is like so:\n\n```css\nborder:  <border-width> <border-style> <color>\n```\n\nFor example:\n\n```css\nborder: 5px solid red;\n```\n\nThis gives us a 5px thick, solid red border around our element.\n\n## Wrapping up\n\nAnd there you go! We’ve covered the basics of margins, padding and borders & seen how they fit into the CSS box model. With a solid understanding of these concepts, you’re well on the way to mastering CSS!\n\n## Related posts:\n\n* [The Box Model](https://www.easeout.co/blog/2020-04-14-the-css-box-model)\n* [CSS Units](https://www.easeout.co/blog/2020-04-30-css-units)",
  "title": "CSS Margins, Padding & Borders",
  "description": "Understand how these properties fit into the CSS box model.",
  "short": "Understand how margins, padding & borders fit into the CSS box model.",
  "category": "CSS",
  "thumbnail": "/images/uploads/css-margins-padding-borders-min.png"
}