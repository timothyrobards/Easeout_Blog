{
  "date": "Tuesday May 19th, 2020",
  "dateshort": "May 19th",
  "body": "In CSS, each [box](https://www.easeout.co/blog/2020-04-14-the-css-box-model) has a position in three dimensions. In addition to the x-axis (horizontal) and y-axis (vertical) positions, boxes also have a “z-axis” where they stack on top of each other.\n\nThe `z-index` property defines the **stacking order** of the elements on the **z-axis**. It only works on elements that have a [position](https://www.easeout.co/blog/2020-05-15-css-positioning) defined (anything apart from the default `position:static;`).\n\nSo when you have multiple overlapping elements on a page, `z-index` lets you decide which one is visible (or nearer to the user), as well as the order of any element(s) that sit behind it.\n\nFor example:\n\n```css\n.element1 {   \n   /* other styles ... */\n   position: absolute;\n   z-index: 1; \n}\n.element2 {   \n   /* other styles ... */\n   position: absolute;\n   z-index: 2; \n}\n```\n\nThe property takes a number, the higher the number, the closer the element is relative to the user.\n\n![z-index Example](/images/uploads/z-index1.png)\n\nAnd rather intuitively, if we swap our order values like so:\n\n```css\n.element1 {   \n   /* other styles ... */\n   position: absolute;\n   z-index: 2; \n}\n.element2 {   \n   /* other styles ... */\n   position: absolute;\n   z-index: 1; \n}\n```\n\nThe stacking order will change:\n\n![z-index Order Changed Example](/images/uploads/z-index2.png)\n\nNegative numbers can also be used.\n\nAnd when no `z-index` value is set, elements stack in the order that they appear in our HTML.\n\nA good rule of thumb is to allow for number gaps when working with `z-index`. So using “10” then “20” for example. This way there is plenty of room to place an element within your stacking order, without having to re-number every element!\n\nIt should also be noted that nested elements behave differently. For example, a child element of element A will **never** be higher than element B, if B has a lower `z-index` value (and therefore a higher stacking order!).\n\n\n\n## Related Posts:\n\n* [CSS Positioning](https://www.easeout.co/blog/2020-05-15-css-positioning)\n* [The Display Property](https://www.easeout.co/blog/2020-05-12-css-display-property)\n* [The Box Model](https://www.easeout.co/blog/2020-04-14-the-css-box-model)",
  "title": "The z-index Property",
  "description": "Learn all about stacking CSS elements with z-index.",
  "short": "Learn all about stacking CSS elements with z-index.",
  "category": "CSS"
}